plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'info.solidsoft.pitest' version '1.15.0'
}

group = 'com.erickWck'
version = '0.0.1-SNAPSHOT'
description = "Gestão de voos (número do voo, origem, destino, data, assentos disponíveis)"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Plugin do PITest para JUnit 5
    pitest 'org.pitest:pitest-junit5-plugin:1.2.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

pitest {
    targetClasses = ['com.erickWck.ticket_service.service.*']
    targetTests = ['com.erickWck.ticket_service.service.*']
    excludedMethods = [
            'getAirlineOrThrow',
            'getAircraftOrThrow'
    ]
    outputFormats = ['HTML']
    threads = 4
    timestampedReports = false
    junit5PluginVersion = '1.2.1'
}
